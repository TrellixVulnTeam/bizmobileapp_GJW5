{"version":3,"file":"src_app_services_services_module_ts.js","mappings":"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","sources":["./src/app/services/services.module.ts","./src/app/services/services.page.ts","./src/app/services/services.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ModuleService } from '../services/module/module.service';\r\nimport { HeaderService } from '../services/header/header.service';\r\nimport { HttpClientModule  } from '@angular/common/http';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ServicesPage } from './services.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ServicesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ServicesPage],\r\n  providers: [\r\n    ModuleService,\r\n    HeaderService\r\n]\r\n})\r\nexport class ServicesPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavController, MenuController, ToastController, AlertController, LoadingController } from '@ionic/angular';\r\nimport { ModuleService } from '../services/module/module.service';\r\n// import { HeaderService } from '../services/header/header.service';\r\nimport { ToastService } from '../services/toast/toast.service';\r\n// import { ItemSliding } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: './services.page.html',\r\n  styleUrls: ['./services.page.scss'],\r\n})\r\nexport class ServicesPage implements OnInit {\r\n\r\n \r\n  // constructor() { }\r\n\r\n  data: any;\r\n  modules = [];\r\n  id: any;\r\n  showSpinner: boolean = true;\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public menuCtrl: MenuController,\r\n    public loadingCtrl: LoadingController,\r\n    private moduleService: ModuleService,\r\n    // private headerservice: HeaderService,\r\n    private toastService: ToastService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.leadsList();\r\n    // this.leadsdeleteList();\r\n  }\r\n\r\n  leadsList() {\r\n      const loginData = JSON.parse(localStorage.getItem('logindata'));\r\n      const session = localStorage.getItem('session');\r\n      const options = this.moduleService.callHeader();\r\n      const getServiceData = {\r\n        url : loginData.url,\r\n        session,\r\n        module : 'Services',\r\n        operation: 'syncModuleRecords'\r\n      };\r\n\r\n      this.moduleService.getservicesListSync(getServiceData).subscribe(res => {\r\n        this.data = res;\r\n        this.showSpinner = false;\r\n        console.log('TestData');\r\n        console.log(this.data);\r\n        if (this.data.success === true) {\r\n          if (this.data.result !== null) {\r\n            console.log('XXXX');\r\n            this.modules = this.data.result.sync.updated;\r\n            console.log(this.modules);\r\n            return this.modules;\r\n          }\r\n        } else {\r\n          console.log(this.data.result.error);\r\n        }\r\n      }, (err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  servicesdeleteList(id) {\r\n\r\n      const loginData = JSON.parse(localStorage.getItem('logindata'));\r\n      const session = localStorage.getItem('session');\r\n       // const id = localStorage.getItem('id');\r\n       const id1= id.split('x')[1];\r\n      const options = this.moduleService.callHeader();\r\n      const getServiceData = {\r\n        url : loginData.url,\r\n        session,\r\n        module : 'Services',\r\n        // id: id.split('x')[1],\r\n        operation: 'deleteRecords'\r\n      };\r\n\r\n      console.log(getServiceData);\r\n      this.moduleService.getservicesListSync(getServiceData, id1).subscribe(res => {\r\n      //  this.router.navigate(['/leads']);\r\n\r\n      this.toastService.presentToast('Delete Successful');\r\n      // location.reload();\r\n      console.log('hgvhvhv');\r\n      console.log(this.id);\r\n      }, (err) => {\r\n      });\r\n  }\r\nrefresh(refresher) {\r\n    console.log('Begin async operation', refresher);\r\n\r\n    setTimeout(() => {\r\n        console.log('Async operation has ended');\r\n        this.leadsList();\r\n    }, 50);\r\n}\r\n\r\n  // getrecordDetail(id) {\r\n  //     alert(id);\r\n  // }\r\n\r\n   // This is sliding closing function\r\n  //  slidingclose(slidingItem: ItemSliding) {\r\n  //   slidingItem.close();\r\n  // }\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n     <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-menu-button></ion-menu-button>\\r\\n     </ion-buttons>\\r\\n     <ion-title>\\r\\n        Services\\r\\n        <ion-icon name=\\\"refresh\\\" (click)=\\\"refresh($event)\\\" float-right></ion-icon>\\r\\n     </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<!--Rajesh Saha-->\\r\\n<br>\\r\\n<ion-content>\\r\\n  <ion-spinner  *ngIf=\\\"showSpinner\\\" color=\\\"primary\\\" name=\\\"lines\\\" class=\\\"addbutton\\\" ></ion-spinner>\\r\\n  <ion-fab vertical=\\\"bottom\\\" class=\\\"addbutton\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n     <a routerLink=\\\"/servicesform\\\" >\\r\\n        <ion-fab-button>\\r\\n           <ion-icon name=\\\"add\\\" style=\\\"color:white;\\\"></ion-icon>\\r\\n        </ion-fab-button>\\r\\n     </a>\\r\\n  </ion-fab>\\r\\n  <ion-item-sliding #slidingItem id=\\\"item100\\\" *ngFor=\\\"let lead of modules;let i = index\\\" style=\\\"background-color:#0ab22a;\\\">\\r\\n     <ion-item>\\r\\n        <div *ngFor=\\\"let field of lead.blocks;let i = index\\\">\\r\\n           <div *ngFor=\\\"let fieldsdt of field.fields;let i = index\\\">\\r\\n              <a routerLink=\\\"/servicesdetails/{{ lead.id }}\\\" class=\\\"alllink\\\" >\\r\\n                 <ion-label >\\r\\n                    <div>\\r\\n                       <p *ngIf=\\\"fieldsdt.name =='servicename'\\\">Service Name:</p>\\r\\n                       <p *ngIf=\\\"fieldsdt.name =='servicename'\\\" id=\\\"ptag\\\" class=\\\"field\\\">{{ fieldsdt.value }}</p>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                       <p *ngIf=\\\"fieldsdt.name =='service_no'\\\">Service No:</p>\\r\\n                       <p *ngIf=\\\"fieldsdt.name =='service_no'\\\" id=\\\"ptag\\\" class=\\\"field\\\">{{ fieldsdt.value |titlecase}} </p>\\r\\n                    </div>\\r\\n                 </ion-label>\\r\\n              </a>\\r\\n           </div>\\r\\n        </div>\\r\\n     </ion-item>\\r\\n     <ion-item-options side=\\\"end\\\">\\r\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"slidingclose(slidingItem)\\\" (click)=\\\"servicesdeleteList(lead.id)\\\" (click)=\\\"refresh($event)\\\" style=\\\"height: 48px;\\\" >\\r\\n        <ion-icon slot=\\\"icon-only\\\" color=\\\"danger\\\" name=\\\"trash\\\" size=\\\"small\\\"></ion-icon>\\r\\n        </ion-button> \\r\\n        <div class=\\\"vl\\\"></div>\\r\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"slidingclose(slidingItem)\\\"  routerLink=\\\"/servicesform/{{ lead.id }}\\\" style=\\\"height: 48px;\\\">\\r\\n           <ion-icon color=\\\"warning\\\" slot=\\\"icon-only\\\" name=\\\"create\\\" size=\\\"small\\\" ></ion-icon>\\r\\n        </ion-button>\\r\\n     </ion-item-options>\\r\\n  </ion-item-sliding>\\r\\n  <!--Rajesh Saha-->\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}