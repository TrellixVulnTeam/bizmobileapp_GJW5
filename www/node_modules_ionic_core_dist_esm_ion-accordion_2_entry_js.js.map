{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-accordion_2.entry.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-06cd27b1.js';\r\nimport { c as config, b as getIonMode } from './ionic-global-a049bcbf.js';\r\nimport { r as raf, t as transitionEndAsync, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers-eed79a2b.js';\r\n\r\nconst accordionIosCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}:host(.accordion-next) ::slotted(ion-item[slot=header]){--border-width:0.55px 0px 0.55px 0px}\";\r\n\r\nconst accordionMdCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}\";\r\n\r\nlet Accordion = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.updateListener = () => this.updateState(false);\r\n    this.state = 1 /* Collapsed */;\r\n    this.isNext = false;\r\n    this.isPrevious = false;\r\n    /**\r\n     * The value of the accordion. Defaults to an autogenerated\r\n     * value.\r\n     */\r\n    this.value = `ion-accordion-${accordionIds++}`;\r\n    /**\r\n     * If `true`, the accordion cannot be interacted with.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * If `true`, the accordion cannot be interacted with,\r\n     * but does not alter the opacity.\r\n     */\r\n    this.readonly = false;\r\n    /**\r\n     * The toggle icon to use. This icon will be\r\n     * rotated when the accordion is expanded\r\n     * or collapsed.\r\n     */\r\n    this.toggleIcon = 'chevron-down';\r\n    /**\r\n     * The slot inside of `ion-item` to\r\n     * place the toggle icon. Defaults to `'end'`.\r\n     */\r\n    this.toggleIconSlot = 'end';\r\n    this.setItemDefaults = () => {\r\n      const ionItem = this.getSlottedHeaderIonItem();\r\n      if (!ionItem) {\r\n        return;\r\n      }\r\n      /**\r\n       * For a11y purposes, we make\r\n       * the ion-item a button so users\r\n       * can tab to it and use keyboard\r\n       * navigation to get around.\r\n       */\r\n      ionItem.button = true;\r\n      ionItem.detail = false;\r\n      /**\r\n       * By default, the lines in an\r\n       * item should be full here, but\r\n       * only do that if a user has\r\n       * not explicitly overridden them\r\n       */\r\n      if (ionItem.lines === undefined) {\r\n        ionItem.lines = 'full';\r\n      }\r\n    };\r\n    this.getSlottedHeaderIonItem = () => {\r\n      const { headerEl } = this;\r\n      if (!headerEl) {\r\n        return;\r\n      }\r\n      /**\r\n       * Get the first ion-item\r\n       * slotted in the header slot\r\n       */\r\n      const slot = headerEl.querySelector('slot');\r\n      if (!slot) {\r\n        return;\r\n      }\r\n      // This is not defined in unit tests\r\n      const ionItem = slot.assignedElements && slot.assignedElements().find(el => el.tagName === 'ION-ITEM');\r\n      return ionItem;\r\n    };\r\n    this.setAria = (expanded = false) => {\r\n      const ionItem = this.getSlottedHeaderIonItem();\r\n      if (!ionItem) {\r\n        return;\r\n      }\r\n      /**\r\n       * Get the native <button> element inside of\r\n       * ion-item because that is what will be focused\r\n       */\r\n      const root = getElementRoot(ionItem);\r\n      const button = root.querySelector('button');\r\n      if (!button) {\r\n        return;\r\n      }\r\n      button.setAttribute('aria-expanded', `${expanded}`);\r\n    };\r\n    this.slotToggleIcon = () => {\r\n      const ionItem = this.getSlottedHeaderIonItem();\r\n      if (!ionItem) {\r\n        return;\r\n      }\r\n      const { toggleIconSlot, toggleIcon } = this;\r\n      /**\r\n       * Check if there already is a toggle icon.\r\n       * If so, do not add another one.\r\n       */\r\n      const existingToggleIcon = ionItem.querySelector('.ion-accordion-toggle-icon');\r\n      if (existingToggleIcon) {\r\n        return;\r\n      }\r\n      const iconEl = document.createElement('ion-icon');\r\n      iconEl.slot = toggleIconSlot;\r\n      iconEl.lazy = false;\r\n      iconEl.classList.add('ion-accordion-toggle-icon');\r\n      iconEl.icon = toggleIcon;\r\n      iconEl.setAttribute('aria-hidden', 'true');\r\n      ionItem.appendChild(iconEl);\r\n    };\r\n    this.expandAccordion = (initialUpdate = false) => {\r\n      if (initialUpdate) {\r\n        this.state = 4 /* Expanded */;\r\n        return;\r\n      }\r\n      if (this.state === 4 /* Expanded */) {\r\n        return;\r\n      }\r\n      const { contentEl, contentElWrapper } = this;\r\n      if (contentEl === undefined || contentElWrapper === undefined) {\r\n        return;\r\n      }\r\n      if (this.currentRaf !== undefined) {\r\n        cancelAnimationFrame(this.currentRaf);\r\n      }\r\n      if (this.shouldAnimate()) {\r\n        raf(() => {\r\n          this.state = 8 /* Expanding */;\r\n          this.currentRaf = raf(async () => {\r\n            const contentHeight = contentElWrapper.offsetHeight;\r\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\r\n            contentEl.style.setProperty('max-height', `${contentHeight}px`);\r\n            await waitForTransition;\r\n            this.state = 4 /* Expanded */;\r\n            contentEl.style.removeProperty('max-height');\r\n          });\r\n        });\r\n      }\r\n      else {\r\n        this.state = 4 /* Expanded */;\r\n      }\r\n    };\r\n    this.collapseAccordion = (initialUpdate = false) => {\r\n      if (initialUpdate) {\r\n        this.state = 1 /* Collapsed */;\r\n        return;\r\n      }\r\n      if (this.state === 1 /* Collapsed */) {\r\n        return;\r\n      }\r\n      const { contentEl } = this;\r\n      if (contentEl === undefined) {\r\n        return;\r\n      }\r\n      if (this.currentRaf !== undefined) {\r\n        cancelAnimationFrame(this.currentRaf);\r\n      }\r\n      if (this.shouldAnimate()) {\r\n        this.currentRaf = raf(async () => {\r\n          const contentHeight = contentEl.offsetHeight;\r\n          contentEl.style.setProperty('max-height', `${contentHeight}px`);\r\n          raf(async () => {\r\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\r\n            this.state = 2 /* Collapsing */;\r\n            await waitForTransition;\r\n            this.state = 1 /* Collapsed */;\r\n            contentEl.style.removeProperty('max-height');\r\n          });\r\n        });\r\n      }\r\n      else {\r\n        this.state = 1 /* Collapsed */;\r\n      }\r\n    };\r\n    /**\r\n     * Helper function to determine if\r\n     * something should animate.\r\n     * If prefers-reduced-motion is set\r\n     * then we should not animate, regardless\r\n     * of what is set in the config.\r\n     */\r\n    this.shouldAnimate = () => {\r\n      if (typeof window === 'undefined') {\r\n        return false;\r\n      }\r\n      const prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;\r\n      if (prefersReducedMotion) {\r\n        return false;\r\n      }\r\n      const animated = config.get('animated', true);\r\n      if (!animated) {\r\n        return false;\r\n      }\r\n      if (this.accordionGroupEl && !this.accordionGroupEl.animated) {\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n    this.updateState = async (initialUpdate = false) => {\r\n      const accordionGroup = this.accordionGroupEl;\r\n      const accordionValue = this.value;\r\n      if (!accordionGroup) {\r\n        return;\r\n      }\r\n      const value = accordionGroup.value;\r\n      const shouldExpand = (Array.isArray(value)) ? value.includes(accordionValue) : value === accordionValue;\r\n      if (shouldExpand) {\r\n        this.expandAccordion(initialUpdate);\r\n        this.isNext = this.isPrevious = false;\r\n      }\r\n      else {\r\n        this.collapseAccordion(initialUpdate);\r\n        /**\r\n         * When using popout or inset,\r\n         * the collapsed accordion items\r\n         * may need additional border radius\r\n         * applied. Check to see if the\r\n         * next or previous accordion is selected.\r\n         */\r\n        const nextAccordion = this.getNextSibling();\r\n        const nextAccordionValue = nextAccordion && nextAccordion.value;\r\n        if (nextAccordionValue !== undefined) {\r\n          this.isPrevious = (Array.isArray(value)) ? value.includes(nextAccordionValue) : value === nextAccordionValue;\r\n        }\r\n        const previousAccordion = this.getPreviousSibling();\r\n        const previousAccordionValue = previousAccordion && previousAccordion.value;\r\n        if (previousAccordionValue !== undefined) {\r\n          this.isNext = (Array.isArray(value)) ? value.includes(previousAccordionValue) : value === previousAccordionValue;\r\n        }\r\n      }\r\n    };\r\n    this.getNextSibling = () => {\r\n      if (!this.el) {\r\n        return;\r\n      }\r\n      const nextSibling = this.el.nextElementSibling;\r\n      if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) !== 'ION-ACCORDION') {\r\n        return;\r\n      }\r\n      return nextSibling;\r\n    };\r\n    this.getPreviousSibling = () => {\r\n      if (!this.el) {\r\n        return;\r\n      }\r\n      const previousSibling = this.el.previousElementSibling;\r\n      if ((previousSibling === null || previousSibling === void 0 ? void 0 : previousSibling.tagName) !== 'ION-ACCORDION') {\r\n        return;\r\n      }\r\n      return previousSibling;\r\n    };\r\n  }\r\n  connectedCallback() {\r\n    const accordionGroupEl = this.accordionGroupEl = this.el && this.el.closest('ion-accordion-group');\r\n    if (accordionGroupEl) {\r\n      this.updateState(true);\r\n      addEventListener(accordionGroupEl, 'ionChange', this.updateListener);\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    const accordionGroupEl = this.accordionGroupEl;\r\n    if (accordionGroupEl) {\r\n      removeEventListener(accordionGroupEl, 'ionChange', this.updateListener);\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    this.setItemDefaults();\r\n    this.slotToggleIcon();\r\n    /**\r\n     * We need to wait a tick because we\r\n     * just set ionItem.button = true and\r\n     * the button has not have been rendered yet.\r\n     */\r\n    raf(() => {\r\n      /**\r\n       * Set aria label on button inside of ion-item\r\n       * once the inner content has been rendered.\r\n       */\r\n      const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\r\n      this.setAria(expanded);\r\n    });\r\n  }\r\n  toggleExpanded() {\r\n    const { accordionGroupEl, value, state } = this;\r\n    if (accordionGroupEl) {\r\n      /**\r\n       * Because the accordion group may or may\r\n       * not allow multiple accordions open, we\r\n       * need to request the toggling of this\r\n       * accordion and the accordion group will\r\n       * make the decision on whether or not\r\n       * to allow it.\r\n       */\r\n      const expand = state === 1 /* Collapsed */ || state === 2 /* Collapsing */;\r\n      accordionGroupEl.requestAccordionToggle(value, expand);\r\n    }\r\n  }\r\n  render() {\r\n    const { disabled, readonly } = this;\r\n    const mode = getIonMode(this);\r\n    const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\r\n    const headerPart = expanded ? 'header expanded' : 'header';\r\n    const contentPart = expanded ? 'content expanded' : 'content';\r\n    this.setAria(expanded);\r\n    return (h(Host, { class: {\r\n        [mode]: true,\r\n        'accordion-expanding': this.state === 8 /* Expanding */,\r\n        'accordion-expanded': this.state === 4 /* Expanded */,\r\n        'accordion-collapsing': this.state === 2 /* Collapsing */,\r\n        'accordion-collapsed': this.state === 1 /* Collapsed */,\r\n        'accordion-next': this.isNext,\r\n        'accordion-previous': this.isPrevious,\r\n        'accordion-disabled': disabled,\r\n        'accordion-readonly': readonly,\r\n        'accordion-animated': config.getBoolean('animated', true)\r\n      } }, h(\"div\", { onClick: () => this.toggleExpanded(), id: \"header\", part: headerPart, \"aria-controls\": \"content\", ref: headerEl => this.headerEl = headerEl }, h(\"slot\", { name: \"header\" })), h(\"div\", { id: \"content\", part: contentPart, role: \"region\", \"aria-labelledby\": \"header\", ref: contentEl => this.contentEl = contentEl }, h(\"div\", { id: \"content-wrapper\", ref: contentElWrapper => this.contentElWrapper = contentElWrapper }, h(\"slot\", { name: \"content\" })))));\r\n  }\r\n  static get delegatesFocus() { return true; }\r\n  get el() { return getElement(this); }\r\n};\r\nlet accordionIds = 0;\r\nAccordion.style = {\r\n  ios: accordionIosCss,\r\n  md: accordionMdCss\r\n};\r\n\r\nconst accordionGroupIosCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){border-bottom:none}\";\r\n\r\nconst accordionGroupMdCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion){-webkit-box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){margin-left:0;margin-right:0;margin-top:16px;margin-bottom:16px;border-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\r\n\r\nlet AccordionGroup = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionChange = createEvent(this, \"ionChange\", 7);\r\n    /**\r\n     * If `true`, all accordions inside of the\r\n     * accordion group will animate when expanding\r\n     * or collapsing.\r\n     */\r\n    this.animated = true;\r\n    /**\r\n     * If `true`, the accordion group cannot be interacted with.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * If `true`, the accordion group cannot be interacted with,\r\n     * but does not alter the opacity.\r\n     */\r\n    this.readonly = false;\r\n    /**\r\n     * Describes the expansion behavior for each accordion.\r\n     * Possible values are `\"compact\"` and `\"inset\"`.\r\n     * Defaults to `\"compact\"`.\r\n     */\r\n    this.expand = 'compact';\r\n  }\r\n  valueChanged() {\r\n    const { value, multiple } = this;\r\n    /**\r\n     * If accordion group does not\r\n     * let multiple accordions be open\r\n     * at once, but user passes an array\r\n     * just grab the first value.\r\n     */\r\n    if (!multiple && Array.isArray(value)) {\r\n      this.value = value[0];\r\n    }\r\n    else {\r\n      this.ionChange.emit({ value: this.value });\r\n    }\r\n  }\r\n  async disabledChanged() {\r\n    const { disabled } = this;\r\n    const accordions = await this.getAccordions();\r\n    for (const accordion of accordions) {\r\n      accordion.disabled = disabled;\r\n    }\r\n  }\r\n  async readonlyChanged() {\r\n    const { readonly } = this;\r\n    const accordions = await this.getAccordions();\r\n    for (const accordion of accordions) {\r\n      accordion.readonly = readonly;\r\n    }\r\n  }\r\n  async onKeydown(ev) {\r\n    const activeElement = document.activeElement;\r\n    if (!activeElement) {\r\n      return;\r\n    }\r\n    const accordionEl = (activeElement.tagName === 'ION-ACCORDION') ? activeElement : activeElement.closest('ion-accordion');\r\n    if (!accordionEl) {\r\n      return;\r\n    }\r\n    const closestGroup = accordionEl.closest('ion-accordion-group');\r\n    if (closestGroup !== this.el) {\r\n      return;\r\n    }\r\n    // If the active accordion is not in the current array of accordions, do not do anything\r\n    const accordions = await this.getAccordions();\r\n    const startingIndex = accordions.findIndex(a => a === accordionEl);\r\n    if (startingIndex === -1) {\r\n      return;\r\n    }\r\n    let accordion;\r\n    if (ev.key === 'ArrowDown') {\r\n      accordion = this.findNextAccordion(accordions, startingIndex);\r\n    }\r\n    else if (ev.key === 'ArrowUp') {\r\n      accordion = this.findPreviousAccordion(accordions, startingIndex);\r\n    }\r\n    else if (ev.key === 'Home') {\r\n      accordion = accordions[0];\r\n    }\r\n    else if (ev.key === 'End') {\r\n      accordion = accordions[accordions.length - 1];\r\n    }\r\n    if (accordion !== undefined && accordion !== activeElement) {\r\n      accordion.focus();\r\n    }\r\n  }\r\n  async componentDidLoad() {\r\n    if (this.disabled) {\r\n      this.disabledChanged();\r\n    }\r\n    if (this.readonly) {\r\n      this.readonlyChanged();\r\n    }\r\n  }\r\n  /**\r\n   * @internal\r\n   */\r\n  async requestAccordionToggle(accordionValue, accordionExpand) {\r\n    const { multiple, value, readonly, disabled } = this;\r\n    if (readonly || disabled) {\r\n      return;\r\n    }\r\n    if (accordionExpand) {\r\n      /**\r\n       * If group accepts multiple values\r\n       * check to see if value is already in\r\n       * in values array. If not, add it\r\n       * to the array.\r\n       */\r\n      if (multiple) {\r\n        const groupValue = value || [];\r\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\r\n        const valueExists = processedValue.find(v => v === accordionValue);\r\n        if (valueExists === undefined && accordionValue !== undefined) {\r\n          this.value = [...processedValue, accordionValue];\r\n        }\r\n      }\r\n      else {\r\n        this.value = accordionValue;\r\n      }\r\n    }\r\n    else {\r\n      /**\r\n       * If collapsing accordion, either filter the value\r\n       * out of the values array or unset the value.\r\n       */\r\n      if (multiple) {\r\n        const groupValue = value || [];\r\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\r\n        this.value = processedValue.filter(v => v !== accordionValue);\r\n      }\r\n      else {\r\n        this.value = undefined;\r\n      }\r\n    }\r\n  }\r\n  findNextAccordion(accordions, startingIndex) {\r\n    const nextAccordion = accordions[startingIndex + 1];\r\n    // tslint:disable-next-line:strict-type-predicates\r\n    if (nextAccordion === undefined) {\r\n      return accordions[0];\r\n    }\r\n    return nextAccordion;\r\n  }\r\n  findPreviousAccordion(accordions, startingIndex) {\r\n    const prevAccordion = accordions[startingIndex - 1];\r\n    // tslint:disable-next-line:strict-type-predicates\r\n    if (prevAccordion === undefined) {\r\n      return accordions[accordions.length - 1];\r\n    }\r\n    return prevAccordion;\r\n  }\r\n  /**\r\n   * @internal\r\n   */\r\n  async getAccordions() {\r\n    return Array.from(this.el.querySelectorAll(':scope > ion-accordion'));\r\n  }\r\n  render() {\r\n    const { disabled, readonly, expand } = this;\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { class: {\r\n        [mode]: true,\r\n        'accordion-group-disabled': disabled,\r\n        'accordion-group-readonly': readonly,\r\n        [`accordion-group-expand-${expand}`]: true\r\n      }, role: \"presentation\" }, h(\"slot\", null)));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"value\": [\"valueChanged\"],\r\n    \"disabled\": [\"disabledChanged\"],\r\n    \"readonly\": [\"readonlyChanged\"]\r\n  }; }\r\n};\r\nAccordionGroup.style = {\r\n  ios: accordionGroupIosCss,\r\n  md: accordionGroupMdCss\r\n};\r\n\r\nexport { Accordion as ion_accordion, AccordionGroup as ion_accordion_group };\r\n"],"names":["r","registerInstance","h","H","Host","i","getElement","e","createEvent","c","config","b","getIonMode","raf","t","transitionEndAsync","a","addEventListener","removeEventListener","g","getElementRoot","accordionIosCss","accordionMdCss","Accordion","constructor","hostRef","updateListener","updateState","state","isNext","isPrevious","value","accordionIds","disabled","readonly","toggleIcon","toggleIconSlot","setItemDefaults","ionItem","getSlottedHeaderIonItem","button","detail","lines","undefined","headerEl","slot","querySelector","assignedElements","find","el","tagName","setAria","expanded","root","setAttribute","slotToggleIcon","existingToggleIcon","iconEl","document","createElement","lazy","classList","add","icon","appendChild","expandAccordion","initialUpdate","contentEl","contentElWrapper","currentRaf","cancelAnimationFrame","shouldAnimate","contentHeight","offsetHeight","waitForTransition","style","setProperty","removeProperty","collapseAccordion","window","prefersReducedMotion","matchMedia","matches","animated","get","accordionGroupEl","accordionGroup","accordionValue","shouldExpand","Array","isArray","includes","nextAccordion","getNextSibling","nextAccordionValue","previousAccordion","getPreviousSibling","previousAccordionValue","nextSibling","nextElementSibling","previousSibling","previousElementSibling","connectedCallback","closest","disconnectedCallback","componentDidLoad","toggleExpanded","expand","requestAccordionToggle","render","mode","headerPart","contentPart","class","getBoolean","onClick","id","part","ref","name","role","delegatesFocus","ios","md","accordionGroupIosCss","accordionGroupMdCss","AccordionGroup","ionChange","valueChanged","multiple","emit","disabledChanged","accordions","getAccordions","accordion","readonlyChanged","onKeydown","ev","activeElement","accordionEl","closestGroup","startingIndex","findIndex","key","findNextAccordion","findPreviousAccordion","length","focus","accordionExpand","groupValue","processedValue","valueExists","v","filter","prevAccordion","from","querySelectorAll","watchers","ion_accordion","ion_accordion_group"],"sourceRoot":"webpack:///"}