{"version":3,"file":"src_app_leadform_leadform_module_ts.js","mappings":"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","sources":["./src/app/leadform/leadform.module.ts","./src/app/leadform/leadform.page.ts","./src/app/leadform/leadform.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ModuleService } from '../services/module/module.service';\r\nimport { HttpClientModule  } from '@angular/common/http';\r\nimport { HeaderService } from '../services/header/header.service';\r\n\r\nimport { LeadformPage } from './leadform.page';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LeadformPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LeadformPage],\r\n  providers: [\r\n    HeaderService,\r\n    ModuleService\r\n  ]\r\n})\r\nexport class LeadformPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavController, MenuController, ToastController, AlertController, LoadingController } from '@ionic/angular';\r\nimport { FormBuilder, FormGroup, Validators , NgForm } from '@angular/forms';\r\nimport { ModuleService } from '../services/module/module.service';\r\n// import { HeaderService } from '../services/header/header.service';\r\nimport { ToastService } from '../services/toast/toast.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-leadform',\r\n  templateUrl: './leadform.page.html',\r\n  styleUrls: ['./leadform.page.scss'],\r\n})\r\nexport class LeadformPage implements OnInit {\r\n  public onLeadForm: FormGroup;\r\n  mainmodulename: any;\r\n  moduleid: any;\r\n  leadData = {};\r\n  data: any;\r\n  ownerValues : [];\r\n  id: any;\r\n  bizFormData : {};\r\n  getServiceData: {};\r\n  editrecord: any;\r\n  x:any; \r\n  j:any;\r\n  k: any;\r\n  modules = [];\r\n  loaddata = 0;\r\n  showSpinner: boolean = true;\r\n  headers: any;\r\n  recordsdata: any;\r\n  modulename: any;\r\n\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public menuCtrl: MenuController,\r\n    public toastCtrl: ToastController,\r\n    public alertCtrl: AlertController,\r\n    public loadingCtrl: LoadingController,\r\n    private formBuilder: FormBuilder,\r\n    public router: Router,\r\n    // private headerservice: HeaderService,\r\n    private toastService: ToastService,\r\n    private moduleService: ModuleService,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    this.moduleid =this.route.snapshot.queryParamMap.get('id')\r\n    this.mainmodulename =this.route.snapshot.queryParamMap.get('name')\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    const modulename:any = JSON.parse(localStorage.getItem('modulesname'));\r\n\r\n    for (let x of modulename) {\r\n     //  console.log(\"listm\",x.name)\r\n      if(this.mainmodulename===x.name){\r\n          console.log(\"moduleid\",x.id)\r\n        this.j = x.id\r\n         // return j;\r\n      }\r\n     \r\n     }\r\n\r\n\r\n    console.log(\"mop\",this.moduleid)\r\n    this.bizFormData = {};\r\n    this.profileList();\r\n    \r\n     this.onLeadForm = this.formBuilder.group({\r\n      'lastname': [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      'assigned_user_id': [null, Validators.compose([\r\n        Validators.required\r\n      ])]\r\n    });\r\n     this.route.paramMap.subscribe(params => {\r\n      this.id = params.get('id');\r\n    });\r\n\r\n     const loginData = JSON.parse(localStorage.getItem('logindata'));\r\n     const session = localStorage.getItem('session');\r\n     const options = this.moduleService.callHeader(); \r\n     const record = this.j+\"x\"+this.moduleid;\r\n   \r\n     const getFetchData = {\r\n      url : loginData.url,\r\n      session,\r\n      module : this.mainmodulename,\r\n      operation: 'fetchRecord',\r\n    };\r\n     if (this.moduleid !== null) {      // fetchrecord\r\n    this.moduleService.getservicesListSync(getFetchData, record).subscribe(res => {\r\n      this.data = res;\r\n      if (this.data !== null) {\r\n          if (this.data.success === true) {\r\n              // console.log(this.data);\r\n              if (this.data.result.record !== null) {\r\n                this.editrecord = this.data.result.record;\r\n                let dataRecieved =Object.keys(this.data.result.record);\r\n                for(let l=0;l< dataRecieved.length; l++){\r\n                  this.bizFormData[dataRecieved[l]] = this.editrecord[dataRecieved[l]];\r\n                }\r\n              }\r\n\r\n          } else {\r\n            this.toastService.presentToast('jj Wrong');\r\n          }\r\n      } else {\r\n          this.toastService.presentToast('ff Wrong');\r\n      }\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  }\r\n\r\n  profileList() {\r\n    console.log(\"moduleidnew\",this.j)\r\n    this.route.paramMap.subscribe(params => {\r\n    this.id = params.get('id');\r\n  });\r\n\r\n    const loginData = JSON.parse(localStorage.getItem('logindata'));\r\n    const session = localStorage.getItem('session');\r\n    const record = this.id;\r\n    const options = this.moduleService.callHeader();\r\n    const getServiceData = {\r\n      url : loginData.url,\r\n      session,\r\n      module : this.mainmodulename,\r\n      operation: 'describe'\r\n\r\n   };\r\n    this.moduleService.getservicesListSync(getServiceData, record).subscribe(res => {\r\n      this.data = res;\r\n      this.showSpinner = false;\r\n    \r\n\r\n  \r\n   \r\n\r\n      if (this.data.success === true) {\r\n        this.loaddata =1;\r\n\r\n        this.modules = this.data.result.describe.fields;\r\n        // console.log(\"ghdata\",this.modules)\r\n let  test_this = this;      \r\nconst test = \"assigned_user_id\"\r\nthis.modules.forEach(function (value, i) {\r\n    if(test===value.name){\r\n  console.log('dataidssss%d', i);\r\n  test_this.k = i;\r\n }\r\n\r\n});\r\n// console.log(\"jkjk\",this.modules.indexOf(test));\r\n// console.log(\"kvalue\",test_this.k)\r\n\r\nif(this.k){      \r\nlet ids = Object.keys(this.modules[test_this.k]['type']['picklistValues']['users']);\r\n        this.modules['ownerdata'] = [];\r\n        for(let i=0;i< ids.length;i++){\r\n          let a = {'id': ids[i] , 'label' : this.modules[test_this.k]['type']['picklistValues']['users'][ids[i]]};\r\n          this.modules['ownerdata'].push(a);\r\n        }\r\n        let idGrops = Object.keys(this.modules[test_this.k]['type']['picklistValues']['groups']);\r\n        let igGroupslength =  idGrops.length;\r\n        for(let j=0;j< igGroupslength;j++){\r\n          let a = {'id': idGrops[j] , 'label' : this.modules[test_this.k]['type']['picklistValues']['groups'][idGrops[j]]};\r\n          this.modules['ownerdata'].push(a);\r\n        }\r\n      } \r\n        // console.log(this.modules);\r\n        let group={}    \r\n        for(let z=0;z< this.modules.length; z++){\r\n            let label = this.modules[z]['name'];\r\n            group[label]= [''];  \r\n        }\r\n        this.onLeadForm = this.formBuilder.group(group);\r\n\r\n       // return this.modules;\r\n      } else {\r\n        console.log(this.data.result.error);\r\n      }\r\n\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n}\r\nopenModel(modulename: String){\r\n  console.log(\"ll\",modulename)\r\n  const loginData = JSON.parse(localStorage.getItem('logindata'));\r\n  const session = localStorage.getItem('session');\r\n  const options = this.moduleService.callHeader();\r\n  const getServiceData = {\r\n    url: loginData.url,\r\n    session,\r\n    module: modulename,\r\n    operation: 'listModuleRecords',\r\n \r\n  };\r\n\r\n  this.moduleService.getservicesListSync(getServiceData, options).subscribe(res => {\r\n    this.data = res;\r\n    if (this.data.success === true) {\r\n      if (this.data.result !== null) {\r\n      \r\n        this.headers = this.data.result.headers;\r\n        this.recordsdata = this.data.result.records;\r\n        console.log(\"relad\",this.recordsdata)\r\n        let headers = this.modules\r\n        return this.modules;\r\n      }\r\n    } else {\r\n      console.log(this.data.result.error);\r\n    }\r\n  }, (err) => {\r\n    console.log(err);\r\n  });\r\n}\r\n\r\nonSubmit(form: NgForm) {\r\nconsole.log(\"formdatanew\",this.bizFormData)\r\n    const loginData = JSON.parse(localStorage.getItem('logindata'));\r\n    const session = localStorage.getItem('session');\r\n    const options = this.moduleService.callHeader();\r\n    const record = this.j+\"x\"+this.moduleid;\r\n\r\n    if (this.moduleid !== null) {\r\n      //Update Record\r\n      \r\n        const getServiceData = {\r\n          url : loginData.url,\r\n          session,\r\n          module : this.mainmodulename,\r\n          operation: 'saveRecord',\r\n          values : JSON.stringify(this.bizFormData),\r\n          // record : this.id\r\n        };\r\n\r\n        this.moduleService.getservicesListSync(getServiceData, record).subscribe(res => {\r\n          this.data = res;\r\n          if (this.data !== null) {\r\n              if (this.data.success === true) {\r\n              this.toastService.presentToast('Record has been successfully updated');\r\n              // this.navCtrl.navigateRoot('/leads/{{mainmodulename}}');\r\n              this.router.navigateByUrl('/leads/'+this.mainmodulename);\r\n              } else {\r\n                this.toastService.presentToast('Something Wrong');\r\n              }\r\n          } else {\r\n              this.toastService.presentToast('Something Wrong');\r\n          }\r\n        }, (err) => {\r\n          console.log(err);\r\n        });\r\n        } else {                    //Insert Record\r\n          form['id'] = undefined;\r\n      const getServiceData = {\r\n            url : loginData.url,\r\n            session,\r\n            module :  this.mainmodulename,\r\n            operation: 'saveRecord',\r\n            values : JSON.stringify(this.bizFormData)  \r\n        };\r\n\r\n      this.moduleService.getservicesListSync(getServiceData).subscribe(res => {\r\n          this.data = res;\r\n          if (this.data !== null) {\r\n              if (this.data.success === true) {\r\n              this.toastService.presentToast('Record has been successfully added');\r\n              // this.navCtrl.navigateRoot('/leads/{{this.mainmodulename}}');\r\n              this.router.navigateByUrl('/leads/'+this.mainmodulename);\r\n              }\r\n              // else {\r\n                // this.toastService.presentToast('Something Wrong');\r\n              // }\r\n          }\r\n          // else {\r\n              // this.toastService.presentToast('Something Wrong');\r\n          // }\r\n        }, (err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n  }\r\n  \r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n     <ion-title>\\r\\n        <form [formGroup]=\\\"onLeadForm\\\" (submit)=\\\"onSubmit(onLeadForm.value)\\\" padding>\\r\\n          <a routerLink=\\\"/leads/{{mainmodulename}}\\\">\\r\\n           <ion-icon name=\\\"arrow-back\\\" ></ion-icon>\\r\\n        </a>\\r\\n        &nbsp;&nbsp;&nbsp;\\r\\n        {{mainmodulename}} Form\\r\\n       \\r\\n            <!-- <ion-button  float-right type=\\\"submit\\\" *ngIf=\\\"onLeadForm\\\" [disabled]=\\\"!onLeadForm.valid\\\"  fill=\\\"clear\\\" class=\\\"savebutton\\\" style=\\\"--background-color: transparent !important;\\\"> \\r\\n                <ion-icon size=\\\"large\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n              </ion-button> -->\\r\\n            </form>\\r\\n        </ion-title>\\r\\n      </ion-toolbar>\\r\\n  </ion-header>\\r\\n<!--Rajesh Saha-->\\r\\n  <br>\\r\\n  <ion-content>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"card1\\\" *ngIf=\\\"loaddata == 1\\\">\\r\\n  <form [formGroup]=\\\"onLeadForm\\\" (submit)=\\\"onSubmit(onLeadForm.value)\\\">\\r\\n    <div class=\\\"card\\\" style=\\\"padding: 10px;\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n       \\r\\n        <!-- <h5 class=\\\"card-title text-center\\\"> {{mainmodulename}} Form</h5> -->\\r\\n        <div class=\\\"row\\\">\\r\\n        \\r\\n           \\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"card\\\" style=\\\"padding: 10px;\\\">\\r\\n              <div class=\\\"card-header\\\">\\r\\n                <!-- <strong>Lead Details</strong> -->\\r\\n              </div>\\r\\n              <div class=\\\"card-body was-validated\\\">\\r\\n              \\r\\n                <div class=\\\"form-group\\\" *ngFor=\\\"let lead of modules;let i = index\\\">\\r\\n                  <div *ngIf=\\\"(lead.displaytype !=='2' && lead.displaytype !=='3')\\\">\\r\\n                    <span *ngIf=\\\"(lead.uitype !=='4' )\\\">\\r\\n                    <!-- ({{lead.displaytype}}  ? '$2.00' : '$10.00') -->\\r\\n                   \\r\\n                    <!-- This is new design inputbox style -->\\r\\n                  <!-- <div *ngIf=\\\"lead.type.name =='text'\\\">\\r\\n                    <ion-item>\\r\\n                      <ion-label position=\\\"floating\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</ion-label>\\r\\n                      <ion-input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"text\\\"  [formControlName]= \\\"modules[i]['name']\\\" name=lead.name></ion-input>\\r\\n                    </ion-item>\\r\\n                  </div> -->\\r\\n\\r\\n                    <div *ngIf=\\\"(lead.type.name =='string' || lead.type.name =='url') &&  lead.name !='salutationtype'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" class=\\\"form-control formstyle\\\" [formControlName]=lead.name>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"lead.type.name =='date'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"date\\\" class=\\\"form-control formstyle\\\" [formControlName]= \\\"modules[i]['name']\\\" name=lead.name>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"lead.type.name =='text'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControlName]= \\\"modules[i]['name']\\\" name=lead.name>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"lead.type.name =='integer' || lead.type.name =='decimal'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"number\\\" class=\\\"form-control\\\" [formControlName]=lead.name name=lead.name>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"lead.type.name =='double'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"percent\\\" class=\\\"form-control\\\" [formControlName]=lead.name name=lead.name>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"lead.type.name =='boolean'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"boolean\\\" class=\\\"form-control\\\" [formControlName]=lead.name name=lead.name>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"lead.type.name =='datetime'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"datetime\\\" class=\\\"form-control\\\" [formControlName]=lead.name name=lead.name>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"lead.type.name =='autogenerated'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"autogenerated\\\" class=\\\"form-control\\\" [formControlName]=lead.name name=lead.name>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"lead.type.name =='time'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"time\\\" class=\\\"form-control\\\" [formControlName]=lead.name name=lead.name>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"lead.type.name =='phone'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"phone\\\" class=\\\"form-control\\\" [formControlName]=lead.name name=lead.name>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"lead.type.name =='email'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"email\\\" class=\\\"form-control\\\" [formControlName]=lead.name name=lead.name>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"lead.type.name =='currency'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <input [(ngModel)]=\\\"bizFormData[lead.name]\\\" type=\\\"currency\\\" class=\\\"form-control\\\" [formControlName]=lead.name name=lead.name>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div *ngIf=\\\"lead.type.name =='reference'\\\" >\\r\\n\\r\\n                      <!-- <div *ngIf=\\\"lead.type.refersTo[0] == 'Project'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select [(ngModel)]=\\\"bizFormData[lead.name]\\\" [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=val *ngFor=\\\"let val of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ val }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div> -->\\r\\n\\r\\n                      <!-- <div *ngIf=\\\"lead.type.refersTo[0] == 'Accounts'\\\" >\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div> -->\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'Accounts'\\\" (click)=\\\"openModel(lead.type.refersTo[0])\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\" >{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let record of recordsdata;let i = index\\\" >\\r\\n                            {{ record.firstname|| record.accountname }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'Project'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=val *ngFor=\\\"let val of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ val }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'Products'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'Currency'\\\" (click)=\\\"openModel(lead.type.refersTo[0])\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\" >{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let record of recordsdata;let i = index\\\" >\\r\\n                            {{ record.firstname }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'Vendors'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n\\r\\n\\r\\n\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'Leads'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'PurchaseOrder'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'Quotes'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'Invoice'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'Faq'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'HelpDesk'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'ProjectTask'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'Potentials'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'Contacts'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select  [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"lead.type.refersTo[0] == 'SalesOrder'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span></label>\\r\\n                        <select [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals *ngFor=\\\"let vals of lead.type.refersTo;let i = index\\\">\\r\\n                            {{ vals }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n\\r\\n\\r\\n                      <!-- <div *ngIf=\\\"lead.type.refersTo[0] == 'Users'\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}  <span *ngIf=\\\"lead.mandatory == true\\\" class=\\\"error\\\"> * </span> </label>\\r\\n                        <select [(ngModel)]=\\\"bizFormData[lead.name]\\\" [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                          <option [value]=vals.id *ngFor=\\\"let vals of testarry;let i = index\\\">\\r\\n                            {{ vals.subject }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div> -->\\r\\n                   \\r\\n\\r\\n                    \\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div *ngIf=\\\"lead.type.name =='picklist' ||   lead.name =='salutationtype'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <select [(ngModel)]=\\\"bizFormData[lead.name]\\\" [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                        <option [value]=pick.value *ngFor=\\\"let pick of lead.type.picklistValues;let i = index\\\">\\r\\n                          {{pick.label}}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"lead.type.name =='owner'\\\">\\r\\n                      <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess2\\\">{{ lead.label }}</label>\\r\\n                      <select [(ngModel)]=\\\"bizFormData[lead.name]\\\" [formControlName]=lead.name name=lead.name class=\\\"form-control\\\">\\r\\n                        <option [value]=k.id *ngFor=\\\"let k of modules['ownerdata']\\\">{{ k.label }}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n\\r\\n                    \\r\\n                 \\r\\n                  </span>\\r\\n                 </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" *ngIf=\\\"onLeadForm\\\" \\r\\n              class=\\\"btn btn-primary btn-lg btn-block\\\">Save {{mainmodulename}}\\r\\n            </button>\\r\\n            <!-- [disabled]=\\\"!onLeadForm.valid\\\" -->\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <!-- <a routerLink=\\\"/leadform\\\" class=\\\"btn btn-primary text-center btn-lg active\\\" role=\\\"button\\\" aria-pressed=\\\"true\\\">Add\\r\\n        Lead</a> -->\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n<!-- type=\\\"submit\\\" *ngIf=\\\"onLeadForm\\\" [disabled]=\\\"!onLeadForm.valid\\\" -->\\r\\n</ion-content>\\r\\n<!--Rajesh Saha-->\";"],"names":[],"sourceRoot":"webpack:///"}